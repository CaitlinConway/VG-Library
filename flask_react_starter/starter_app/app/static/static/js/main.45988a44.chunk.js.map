{"version":3,"sources":["components/User.js","components/UsersList.js","store/authReducer.js","components/LogIn.js","components/SignUp.js","components/Console.js","components/ConsoleFeed.js","store/gameReducer.js","components/Homepage.js","components/Game.js","components/GameFeed.js","components/Profile.js","App.js","store/configureStore.js","store/rootReducer.js","index.js"],"names":["User","props","user","username","email","UsersList","useState","users","setUsers","useEffect","a","fetch","response","json","responseData","fetchData","userComponents","map","key","id","console","log","LOGIN","setUser","firstName","lastName","zipCode","type","login","password","dispatch","method","headers","body","JSON","stringify","res","ok","currentUser","Login","handleSubmit","e","preventDefault","state","updateEmail","setState","target","value","updatePassword","demoUserLogin","this","isLoggedIn","to","className","onSubmit","onChange","React","Component","connect","auth","SignUp","updateFirstName","updateLastName","updateZipCode","length","errors","signUp","document","getElementById","style","display","window","location","href","src","alt","placeholder","data","error","alert","Console","ConsoleFeed","consoles","games","getConsoles","getGames","Homepage","logout","logOut","getAllConsoles","undefined","onClick","Game","game","gameInfo","setGameInfo","gameOwner","setGameOwner","query","search","snippet","owners","getGameInfo","getGameOwner","string4","toString","split","join","GameFeed","match","params","getAllGames","Profile","ConnectedProtectedRoute","loggedIn","component","rest","App","storeEnhancer","loading","setLoading","useDispatch","userId","userEmail","userFirstName","userLastName","loadUser","path","render","exact","rootReducer","combineReducers","action","newState","Object","assign","applyMiddleware","thunk","logger","store","initialState","createStore","configureStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.45988a44.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction User(props) {\n    return (\n        <>\n            <strong>Username:</strong> {props.user.username}<br />\n            <strong>Email:</strong> {props.user.email}<br />\n            <hr />\n        </>\n    );\n}\nexport default User;","import React, { useEffect, useState } from 'react';\n\nimport User from './User';\n\nfunction UsersList (props) {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch('/api/users/');\n            const responseData = await response.json();\n            setUsers(responseData.users);\n        }\n        fetchData();\n    }, []);\n\n    const userComponents = users.map((user) => <User key={user.id} user={user} />)\n    console.log(\"____Rendering User List____\")\n    return (\n        <>\n            <h1>User List: </h1>\n            {userComponents}\n        </>\n        );\n}\n\nexport default UsersList;","\nconst LOGIN = \"auth/login\";\nconst LOGOUT = \"auth/logout\";\n\n\nexport default function authReducer(state = {}, action) {\n  let newState = Object.assign({}, state);\n    switch(action.type) {\n        case LOGIN:\n          newState[\"id\"] = action.id;\n          newState[\"email\"] = action.email;\n          newState[\"firstName\"] = action.firstName;\n          newState[\"lastName\"] = action.lastName;\n          newState[\"zipCode\"] = action.zipCode;\n            return newState;\n        case LOGOUT:\n            return {};;\n        default:\n            return state;\n    }\n}\n\nexport const setUser = (id, email, firstName, lastName, zipCode) => {\n    return {\n        type: LOGIN,\n        id,\n        email,\n        firstName,\n        lastName,\n        zipCode\n    }\n}\n\nconst logoutUser = () => {\n  return {\n    type: LOGOUT\n  }\n}\n\nexport const login = function(email, password) {\n    return async(dispatch) => {\n        let res = await fetch(\"/api/users/login\", {\n            method: \"POST\",\n            headers: {'Content-Type': \"application/json\"},\n            body: JSON.stringify({email, password})\n        })\n        if(res.ok) {\n            let currentUser = await res.json();\n            dispatch(setUser(currentUser.id, currentUser.email, currentUser.firstName, currentUser.lastName, currentUser.zipCode));\n        }\n    }\n}\n\nexport const logOut = () => {\n    return async function(dispatch) {\n        let res = await fetch(\"/api/users/logout\", {\n            method: \"DELETE\",\n        });\n        if(res.ok) {\n            dispatch(logoutUser());\n            return \"success\";\n        }\n    }\n}\n\nexport const signUp = function(firstName, lastName, email, password, zipCode) {\n    return async function(dispatch) {\n        const res = await fetch(\"/api/users/signup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ firstName, lastName, email, password, zipCode })\n        })\n        res.data = await res.json();\n        const { error } = res.data\n\n        if (res.data.error) {\n            alert(error)\n        }\n        else if(res.ok && !res.data.error) {\n            dispatch(setUser(res.data.id, res.data.email, res.data.firstName, res.data.lastName, res.data.zipCode))\n            // alert(\"Signup successful! Returning to login page.\")\n        }\n    }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { login } from '../store/authReducer'\nimport { connect } from 'react-redux';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: \"\",\n          password: \"\",\n        };\n      }\n\nhandleSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    this.props.login(email, password);\n  };\n\n  updateEmail = (e) => {\n    this.setState({ email: e.target.value });\n  };\n\n  updatePassword = (e) => {\n    this.setState({ password: e.target.value });\n  };\n\n  demoUserLogin = (e) => {\n    e.preventDefault();\n    const email = \"guest@guest.com\";\n    const password = \"password\";\n    this.props.login(email, password);\n  }\n\n  render() {\n    if (this.props.isLoggedIn) return <Redirect to=\"/\"></Redirect>;\n    const { email, password } = this.state;\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-background\"></div>\n        <div className=\"login-page-div\">\n          <div className=\"login-form-header\">Welcome!</div>\n          <div className=\"error-container\">\n            <ul id=\"errors\" className=\"errors\"></ul>\n          </div>\n          <div className=\"login-form-div\">\n            <form onSubmit={this.handleSubmit} className=\"login-form\">\n            <div className=\"login-form-email-header\">Email</div>\n              <input\n                className=\"login-input\"\n                type=\"email\"\n                value={email}\n                onChange={this.updateEmail}\n              ></input>\n            <div className=\"login-form-email-header\">Password</div>\n              <div>\n              <input\n                className=\"login-input\"\n                type=\"password\"\n                value={password}\n                onChange={this.updatePassword}\n              ></input>\n              </div>\n              <div className=\"login-sign-in-button\">\n                <button type=\"submit\" className=\"login-button\">\n                  Sign In\n                </button>\n              </div>\n            </form>\n          </div>\n            <form onSubmit={this.demoUserLogin} className=\"login-sign-in-button\">\n              <button type=\"submit\"\n              className=\"login-sign-in-button\">\n              Demo User\n              </button>\n            </form>\n          </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n      isLoggedIn: !!state.auth.id,\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      login: (email, password) => dispatch(login(email, password)),\n    };\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp, login } from \"../store/authReducer\";\n\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\",\n            zipCode: \"\",\n            errors: \"\"\n        };\n    }\n\n    updateFirstName = (e) => {\n        this.setState({ firstName: e.target.value });\n    };\n\n    updateLastName = (e) => {\n        this.setState({ lastName: e.target.value });\n    };\n\n    updateEmail = (e) => {\n        this.setState({ email: e.target.value });\n    };\n    updateZipCode = (e) => {\n      this.setState({ zipCode: e.target.value });\n  };\n\n    updatePassword = (e) => {\n        this.setState({ password: e.target.value });\n        if (e.target.value.length < 8 && e.target.value.length > 0) {\n            this.setState({ errors: \"Your password must be at least 8 characters.\"});\n        } else {\n            this.setState({ errors: \"\"});\n        }\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const { firstName, lastName, email, password, zipCode} = this.state;\n        this.props.signUp(firstName, lastName, email, password. zipCode);\n        const errorsContainer = document.getElementById(\"errors\");\n        if (errorsContainer.style.display === \"none\") {\n          window.location.href = \"/\";\n        }\n    };\n\n    render() {\n      if (this.props.isLoggedIn) return <Redirect to=\"/\"></Redirect>;\n        const { firstName, lastName, email, password, errors, zipCode } = this.state;\n        return (\n          <div className=\"signup-page\">\n            <img src=\"\" alt=\"\"></img>\n            <div className=\"signup-form-content\">\n                <div className=\"signup-form-div\">\n                    <form onSubmit={this.handleSubmit} className=\"signup-form\">\n                        <input\n                        className=\"signup-input\"\n                        type=\"text\"\n                        value={firstName}\n                        onChange={this.updateFirstName}\n                        placeholder=\"First name\"\n                        ></input>\n                        <input\n                        className=\"signup-input\"\n                        type=\"text\"\n                        value={lastName}\n                        onChange={this.updateLastName}\n                        placeholder=\"Last name\"\n                        ></input>\n                        <div className=\"break\"></div>\n                        <input\n                        className=\"signup-input\"\n                        type=\"email\"\n                        value={email}\n                        onChange={this.updateEmail}\n                        placeholder=\"Email\"\n                        ></input>\n                        <div className=\"break\"></div>\n                        <input\n                        className=\"signup-input\"\n                        type=\"password\"\n                        value={password}\n                        onChange={this.updatePassword}\n                        placeholder=\"Password (min. 10 characters)\"\n                        ></input>\n                        <div className=\"break\"></div>\n                        <button type=\"submit\" className=\"signup-button\">\n                            Sign up!\n                        </button>\n                        <span className=\"signup-text\">Already signed up?\n                        <a href=\"/login\" className=\"login-link\">Login to your account here.</a></span>\n                    </form>\n                </div>\n            </div>\n            <div className=\"signup-error-container\">\n                <ul id=\"errors\" className=\"errors\">{errors}</ul>\n            </div>\n          </div>\n        );\n      }\n    }\n\n  const mapStateToProps = (state) => {\n    return {\n        isLoggedIn: !!state.auth.id,\n     };\n    };\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      signUp: (firstName, lastName, email, password, zipCode) =>\n        dispatch(signUp(firstName, lastName, email, password, zipCode)),\n      login: (email, password) => dispatch(login(email, password)),\n    };\n  };\n\n  export default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from \"react\";\nimport { Redirect, NavLink, Route } from 'react-router-dom';\n\nconst Console = ({ console})=> {\n  // function handleClick() {\n  //   return (<Redirect to={`/consoles/${console}`}></Redirect>)\n  // }\n  return (\n    <>\n      <div id={'console-links'}>\n        <NavLink id={'console-name'} to={`/consoles/${console}`}>{console}\n        </NavLink>\n        {/* <NavLink to={{\n          pathname:`/consoles/${console}`,\n          aboutProps: {games:games}\n        }}>{console}</NavLink> */}\n      </div>\n    </>\n  )\n};\n\n\nexport default Console;\n","import React from \"react\";\nimport Console from \"./Console.js\";\n\nconst ConsoleFeed = (consoles, games) => {\n  return (\n    <>\n      <div id=\"ConsoleFeed-div\">\n        <h1 className='ConsoleFeed-title'>Consoles</h1>\n        <ul id=\"ConsoleFeed\">\n          {consoles.consoles.map((console) => (\n            <li key={console} id={'console-li'}>\n              <Console console={console} games={games}></Console>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\n\nexport default ConsoleFeed;\n","const GET_CONSOLES = \"consoles\";\nconst GET_GAMES = 'games'\n// const GET_GAME_INFO = \"games/info\"\nexport const getConsoles = (consoles) => {\n  return {\n    type: GET_CONSOLES,\n    consoles\n  };\n};\n\nexport const getAllConsoles = function () {\n  return async (dispatch) => {\n    let res = await fetch(\"/api/games/consoles\");\n    if (res.ok) {\n      let consoles = await res.json();\n      dispatch(getConsoles(consoles));\n    }\n  };\n};\nexport const getGames = (games) => {\n  return {\n    type: GET_GAMES,\n    games\n  };\n};\n// export const getGameInfo = (game) =>{\n//   return {\n//     type: GET_GAME_INFO,\n//     games\n//   }\n// }\n\nexport const getAllGames = function (console) {\n  return async (dispatch) => {\n    let res = await fetch(`/api/games/console/${console}`);\n    if (res.ok) {\n      let games = await res.json();\n      dispatch(getGames(games));\n    }\n  };\n};\n\n\n\nexport default function gameReducer(state = {}, action) {\n  let newState = Object.assign({}, state);\n    switch (action.type) {\n      case GET_CONSOLES:\n        newState[\"consoles\"] = action.consoles;\n        return newState;\n      case GET_GAMES:\n        newState[\"games\"] = action.games;\n        return newState;\n      // case GET_GAME_INFO:\n      //   newState[action.game] = action.game.info\n      default:\n        return state;\n    }\n\n}\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport ConsoleFeed from \"./ConsoleFeed\";\nimport { getAllConsoles} from \"../store/gameReducer.js\";\nimport {Link, NavLink} from 'react-router-dom'\nimport {logOut} from '../store/authReducer'\n\nclass Homepage extends React.Component {\n  componentDidMount() {\n    this.props.getAllConsoles();\n  }\n  logout = (e) =>{\n    e.preventDefault();\n    this.props.logOut()\n\n  }\n  render() {\n    if (this.props.consoles && this.props.user[\"id\"] == undefined) {\n      return (\n        <>\n          <div id={\"homepage-title\"}>Play With Pals</div>\n          <ConsoleFeed consoles={this.props.consoles.consoles} games = {this.props.consoles.games}></ConsoleFeed>\n          <div id={'welcome'}>\n            Have you been wanting to try out the latest games but don't have money to buy them? Does your video game collection vastly exceed your free time and you wish they weren't just collecting dust? Play with Pals is here to connect friends together to share their libraries. Users can post their own video game libraries, or request to borrow a game from a friend. Want to start swapping?\n          </div>\n          <div id={'welcome-buttons'}>\n          <NavLink id={'join'} to=\"/signup\">Join now!</NavLink>\n          <NavLink id={'sign-in'} to=\"/login\">Already a friend? Sign in here</NavLink>\n          </div>\n        </>\n      );\n    }\n    if (this.props.consoles) {\n      return (\n        <>\n          <div id={\"homepage-title\"}>Play With Pals</div>\n          <ConsoleFeed consoles={this.props.consoles.consoles} games = {this.props.consoles.games}></ConsoleFeed>\n          <div id={'welcome'}>\n            Have you been wanting to try out the latest games but don't have money to buy them? Does your video game collection vastly exceed your free time and you wish they weren't just collecting dust? Play with Pals is here to connect friends together to share their libraries. Users can post their own video game libraries, or request to borrow a game from a friend. Want to start swapping?\n          </div>\n          <div id={'welcome-buttons'}>\n          <button id={'logout-button'} onClick={this.logout}>Logout</button>\n          <NavLink to=\"/profile\" user={this.props.user} id={'profile-button'}>Account</NavLink>\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  consoles: state.games.consoles,\n  user: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllConsoles: () => dispatch(getAllConsoles()),\n    logOut: () => dispatch(logOut())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\n","import React, {useEffect, useState} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\"\nconst Game = ({ game }) => {\n  const [gameInfo, setGameInfo] = useState({})\n  const [gameOwner, setGameOwner] = useState(0)\n  useEffect(()=> {\n      async function getGameInfo() {\n          const res = await fetch(`/api/games/${game}`);\n          if(res.ok) {\n              const data = await res.json()\n              setGameInfo(data[game].query.search[0].snippet)\n          }\n      }\n      async function getGameOwner(){\n        const res = await fetch(`/api/games/owners/${game}`)\n        if (res.ok){\n          const data = await res.json()\n          setGameOwner(data.owners)\n        }\n      }\n      getGameInfo()\n      getGameOwner();\n  }, [game])\n  let string =gameInfo.toString();\n  let array = string.split('<span class=\"searchmatch\">');\n  let string2 = array.join(\" \");\n  let array2 = string2.split('</span>');\n  let string3 = array2.join();\n  let array3 = string3.split(\",\");\n  let string4= array3.join();\n  return (\n    <>\n      <div id={'game-feed-divs'}>\n        <div id={'game-name'}>{game}</div>\n        <div id={'game-blurb'}>{string4}</div>\n        <div id = {'game-owner'}>Owned by: {gameOwner}</div>\n      </div>\n    </>\n  )\n};\n\n\nexport default Game;\n","import React from 'react'\nimport Game from './Game'\nimport {connect} from 'react-redux'\nimport {getAllGames} from '../store/gameReducer'\nclass GameFeed extends React.Component {\n  componentDidMount(){\n  let console = this.props.match.params.console;\n  this.props.getAllGames(console);\n  }\n  render(){\n    let console = this.props.match.params.console;\n    if (this.props.games && this.props.games[console] !== undefined){\n    return (\n        <>\n        <div id={\"homepage-title\"}>Play With Pals</div>\n        <div id=\"ConsoleFeed-div\">\n        <h1 className='ConsoleFeed-title'>{console}</h1>\n        <ul id=\"ConsoleFeed\">\n          {this.props.games[console].map((game) => (\n            <li key={game} id={'console-game-li'}>\n              <Game game={game}></Game>\n            </li>\n          ))}\n        </ul>\n      </div>\n        </>\n    )\n          }\n\n    else {\n      return (<div id={'no-games'}>\n        No games\n          </div>)\n    }\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    games: state.games.games,\n    user: state.auth\n  });\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      getAllGames: (console) => dispatch(getAllGames(console)),\n    };\n  };\n\n  export default connect(mapStateToProps, mapDispatchToProps)(GameFeed);\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n\n\nclass Profile extends React.Component {\n  render() {\n\n      return (<>\n      <div id={\"homepage-title\"}>Play With Pals</div>\n      <div id={'profile-header'}>My Profile</div>\n      </>\n      )\n}\n}\nconst mapStateToProps = (state) => ({\n  consoles: state.games.consoles,\n  user: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport UserList from \"./components/UsersList\";\nimport { setUser } from \"./store/authReducer\";\nimport Login from \"./components/LogIn\";\nimport SignUp from \"./components/SignUp\";\nimport Homepage from \"./components/Homepage\";\nimport GameFeed from './components/GameFeed'\nimport Profile from './components/Profile'\nconst protectedRoute = ({ component: Component, loggedIn, ...rest }) => {\n  if (loggedIn) return <Route {...rest} component={Component} />;\n  else return <Redirect to=\"/\" />;\n};\nconst mapStateToProps = (state) => {\n  return { loggedIn: !!state.auth.id };\n};\n\nconst ConnectedProtectedRoute = connect(mapStateToProps, null)(protectedRoute);\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const loadUser = async () => {\n      // enter your back end route to get the current user\n      const res = await fetch(\"/api/users/current\");\n      if (res.ok) {\n        res.data = await res.json(); // current user info - obj with key of user\n        dispatch(setUser(res.data.userId, res.data.userEmail, res.data.userFirstName, res.data.userLastName, res.data.zipCode));\n      }\n      setLoading(false);\n    }\n    loadUser();\n  }, [dispatch]);\n  if (loading) return null;\n  return (\n    <BrowserRouter>\n      {/* <nav>\n        <ul className=\"nav-bar\">\n          <li className=\"nav-button-li\">\n            <NavLink to=\"/\" activeclass=\"active\" className=\"nav-button\">\n              Home\n            </NavLink>\n          </li>\n          <li className=\"nav-button-li\">\n            <NavLink to=\"/users\" activeclass=\"active\" className=\"nav-button\">\n              Users\n            </NavLink>\n          </li>\n        </ul>\n      </nav> */}\n      <Switch>\n        <Route path=\"/login\"\n        // component={Login}\n        render={(props) => <Login {...props}></Login>}\n        />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/consoles/:console\"\n        render={(props) => <GameFeed {...props}></GameFeed>}>\n        {/* component={GameFeed}> */}\n        </Route>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => <Homepage {...props}></Homepage>}\n\n        ></Route>\n        <Route path=\"/users\">\n          <UserList />\n        </Route>\n        <ConnectedProtectedRoute path='/profile' render={(props) => <Profile {...props}></Profile>}></ConnectedProtectedRoute>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\nimport logger from \"redux-logger\";\nlet storeEnhancer;\n\nif (process.env.NODE_ENV !== \"production\") {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  storeEnhancer = composeEnhancers(applyMiddleware(thunk));\n} else {\n  storeEnhancer = applyMiddleware(thunk, logger);\n}\n\nexport default function configureStore(initialState = {}) {\n  return createStore(rootReducer, initialState, storeEnhancer);\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport gameReducer from \"./gameReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  games: gameReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}